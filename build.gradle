group 'io.github.kitarek'
version '0.1-SNAPSHOT'

apply plugin: "jacoco"
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'codenarc'
apply plugin: 'findbugs'
apply plugin: 'jdepend'
apply plugin: 'pmd'

sourceCompatibility = 1.5

// The dummy implementation for quick testing
mainClassName = "io.github.kitarek.elasthttpd.DefaultHttpServer"

repositories {
	mavenCentral()
}

configurations {
	all*.exclude group: 'commons-logging'
	all*.exclude group: 'log4j'
}

dependencies {
	compile 'org.apache.httpcomponents:httpcore:4.4.3'
	compile 'org.slf4j:slf4j-api:1.7.2'
	compile 'org.apache.commons:commons-lang3:3.1'

	runtime 'ch.qos.logback:logback-classic:1.0.9'
	runtime 'org.slf4j:jcl-over-slf4j:1.7.2'
	runtime 'org.slf4j:log4j-over-slf4j:1.7.2'

	testCompile 'junit:junit:4.11'
	testCompile 'org.codehaus.groovy:groovy-all:2.3.11'
	testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
	testCompile 'org.powermock:powermock-module-junit4:1.6.3'
	testCompile 'org.powermock:powermock-api-easymock:1.6.3'
	testCompile 'org.easymock:easymock:3.1'
	testCompile 'org.powermock:powermock-module-junit4-rule:1.6.3'
	testCompile 'org.powermock:powermock-classloading-xstream:1.6.3'
	testCompile 'commons-io:commons-io:2.4'
	testCompile 'org.apache.httpcomponents:httpclient:4.5'
	testCompile 'org.slf4j:jcl-over-slf4j:1.7.2'
	testCompile 'org.slf4j:log4j-over-slf4j:1.7.2'
	testCompile 'commons-codec:commons-codec:1.10'

	testRuntime 'cglib:cglib-nodep:3.1'
	testRuntime 'org.objenesis:objenesis:2.1'

}

checkstyleMain << {
	ant.xslt(in: reports.xml.destination,
			style: new File('config/checkstyle/checkstyle.xsl'),
			out: new File(reports.xml.destination.parent, 'main.html'))
}

findbugsMain {
	ignoreFailures = true
}

pmdMain << {
	source 'src'
	include '**/*.java'

	reports {
		xml.enabled = false
		html.enabled = true
	}

	ruleSets = ["basic", "braces", "junit", "design" ]
	ignoreFailures = true
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}


task run (dependsOn: 'classes', type: JavaExec, overwrite: true) {
	main = "io.github.kitarek.elasthttpd.DefaultHttpServer"
	classpath = jar.outputs.files + project.configurations.runtime
}

task runFileServer (dependsOn: 'classes', type: JavaExec) {
	main = "io.github.kitarek.elasthttpd.DefaultFileHttpServer"
	classpath = jar.outputs.files + project.configurations.runtime
}

task runFullFileServer (dependsOn: 'classes', type: JavaExec) {
	copy {
		from './src/main/resources/'
		into './sandbox'
	}
	main = "io.github.kitarek.elasthttpd.DefaultFullFileHttpServer"
	classpath = jar.outputs.files + project.configurations.runtime
}